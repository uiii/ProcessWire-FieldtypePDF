<?php

use FieldtypePDF\PagePDF;

/*
 * The MIT License
 *
 * Copyright 2015 Richard Jedlička <jedlicka.r@gmail.com> (http://uiii.cz)
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

class InputfieldPDF extends InputfieldImage implements InputfieldItemList
{
	public static function getModuleInfo()
	{
		return array(
			'version' => 110,
			'title' => __('PDF files with thumbnails', __FILE__), // Module Title
			'summary' => __('One or more pdf files upload with thumbnails', __FILE__), // Module Summary
			'href' => 'http://modules.processwire.com/modules/fieldtype-pdf',
			'author' => "Richard Jedlička",
			'requires' => array("FieldtypePDF")
		);
	}

	public function init()
	{
		parent::init();
		$this->set('extensions', 'PDF');
	}

	protected function ___fileAdded(Pagefile $pagefile)
	{
		// skip image resizing from InputfieldImage
		return InputfieldFile::___fileAdded($pagefile);
	}

	protected function ___renderItem($pagefile, $id, $n)
	{
		if ($pagefile instanceof PagePDF) {
			$pagefile = $pagefile->toImage(); 
		}

		return parent::___renderItem($pagefile, $id, $n);
	}

	public function ___getConfigInputfields()
	{
		$inputfields = parent::___getConfigInputfields();

		$inputfields->get('maxWidth')->parent->collapsed = InputfieldPDF::collapsedHidden;

		if ($inputfields->has('minWidth')) { // PW 2.5
			$inputfields->get('minWidth')->parent->collapsed = InputfieldPDF::collapsedHidden;
		}
	
		return $inputfields; 	
	}
}
